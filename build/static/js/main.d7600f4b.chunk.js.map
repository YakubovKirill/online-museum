{"version":3,"sources":["types.tsx","constants/constants.tsx","constants/labels.tsx","components/ContentComponents/ContentComponent.tsx","components/FooterComponent/Footer.tsx","components/HeaderComponents/UserLabelComponenmt/UserLabelComponent.tsx","store/actions/index.tsx","components/HeaderComponents/Header.tsx","components/HeaderComponents/LoginComponent/LoginCmponent.tsx","components/ContentComponents/Gallery/Gallery.tsx","App.tsx","store/reducers/userReducer.tsx","store/reducers/index.tsx","index.tsx"],"names":["ACTIONS","ROLES","ROUTE","LOGIN","TEXT_DESCRIPTION_FIRST","ContentComponent","className","to","React","memo","Footer","UserLabelComponent","props","userName","onClick","loginChange","changeUserAction","data","type","CHANGE_USER","payload","guest","id","role","GUEST","Header","useState","isLogedIn","setIsLoggedIn","setUserName","user","useSelector","dispatch","useDispatch","logout","useCallback","localStorage","removeItem","useEffect","hasUser","getItem","userStor","JSON","parse","stringify","testAdminUser","name","noError","hasError","message","LoginComponent","password","setPassword","loggedIn","setLoggedIn","error","setError","isCorrectString","inputStr","split","join","length","onSubmit","e","preventDefault","ADMIN","setItem","maxLength","minLength","required","onChange","currentTarget","value","placeholder","Gallery","window","scrollTo","top","App","path","exact","component","LoginCmponent","initUser","allReducers","combineReducers","state","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAYYA,EAIAC,E,wEChBCC,EACA,IADAA,EAEA,WAFAA,EAGF,SCDEC,EAAQ,2BAERC,EAAyB,qN,eCGhCC,EAA6B,WACjC,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UAEE,sBAAKA,UAAU,iCAAf,UACE,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,mBAAf,SAAkC,4BAAIF,SAIxC,sBAAKE,UAAU,kCAAf,UACE,qBAAKA,UAAU,mBAAf,SAAkC,4BAAIF,MACtC,qBAAKE,UAAU,yBAIjB,sBAAKA,UAAU,iCAAf,UACE,qBAAKA,UAAU,sBACf,qBAAKA,UAAU,mBAAf,SAAkC,4BAAIF,SAGxC,sBAAKE,UAAU,eAAf,UACE,qBAAKA,UAAU,aAAf,SAA4B,4BD7BV,gFC8BlB,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,cACf,qBAAKA,UAAU,iBAEjB,qBAAKA,UAAU,UAAf,SAAyB,cAAC,IAAD,CAAMC,GAAIL,EAAV,SAAyB,iCDhC/B,oHCuCdM,MAAMC,KAAKJ,GCxCpBK,G,MAAmB,WACvB,OACE,6BAIWF,MAAMC,KAAKC,G,OCApBC,G,YAA+C,SAACC,GACpD,OACE,sBAAKN,UAAU,iBAAf,UACE,qBAAKA,UAAU,YAAf,SAA2B,4BAAIM,EAAMC,aACrC,wBAAQC,QAASF,EAAMG,YAAaT,UAAU,SAA9C,SAAuD,4BHXvC,qCGYhB,qBAAKA,UAAU,oBAKNE,MAAMC,KAAKE,I,SLRdX,K,2BAAAA,M,cAIAC,K,cAAAA,E,eAAAA,M,KMdL,IAAMe,EAAmB,SAACC,GAC7B,MAAO,CACHC,KAAMlB,EAAQmB,YACdC,QAASH,ICMXI,EAAc,CAChBC,GAAI,EACJT,SAAU,QACVU,KAAMtB,EAAMuB,OAGVC,EAAmB,WACrB,MAAmCC,oBAAkB,GAArD,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOb,EAAP,KAAiBgB,EAAjB,KACMC,EAAOC,aAAY,SAACD,GAAD,OAA0BA,EAAKA,QAClDE,EAAWC,cAEXC,EAASC,uBAAY,WACpBR,IACCS,aAAaC,WAAW,QACxBT,GAAc,GACdI,EAAShB,EAAiBK,OAE/B,CAACM,EAAWK,IAsBf,OApBAM,qBAAU,WACN,IAAMC,EAA4C,OAAjCH,aAAaI,QAAQ,QACtC,GAAGD,EAAS,CACR,IAAME,EAAWC,KAAKC,MAAMP,aAAaI,QAAQ,SAAWE,KAAKE,UAAUvB,IACrES,EAAa,CACfR,GAAImB,EAASnB,GACbT,SAAU4B,EAAS5B,SACnBU,KAAMkB,EAASlB,MAEnBS,EAAShB,EAAiBc,IAE9BF,EAAcW,KACf,CAACP,IAEJM,qBAAU,WACN,IAAMC,EAA4C,OAAjCH,aAAaI,QAAQ,QACtCZ,EAAcW,GACdV,EAAYC,EAAKjB,YAClB,CAACiB,IAGA,wBAAQxB,UAAU,MAAlB,SACI,sBAAKA,UAAU,qBAAf,UACI,cAAC,IAAD,CAAMC,GAAIL,EAAV,SAAyB,+CACzB,qBAAKI,UAAU,YAAf,SACKqB,EACI,cAAC,EAAD,CAAoBZ,YAAamB,EAAQrB,SAAUA,IACjD,uCAAS,cAAC,IAAD,CAAMN,GAAIL,EAAV,SAAuB,4BAAIC,iBAQhDK,MAAMC,KAAKgB,G,OCxDpBoB,G,MACE,SADFA,EAEM,QAQNxB,EAAQ,CACZC,GAAI,EACJwB,KAAM,QACNvB,KAAMtB,EAAMuB,OAGRuB,EAAU,CACdC,UAAU,EACVC,QAAS,IAGLC,EAA2B,WAC/B,MAAgCxB,mBAAiB,SAAjD,mBAAOb,EAAP,KAAiBgB,EAAjB,KACA,EAAgCH,mBAAiB,IAAjD,mBAAOyB,EAAP,KAAiBC,EAAjB,KACA,EAAgC1B,oBAAkB,GAAlD,mBAAO2B,EAAP,KAAiBC,EAAjB,KACA,EAA0B5B,mBAAqBqB,GAA/C,mBAAOQ,EAAP,KAAcC,EAAd,KACMxB,EAAWC,cAEXwB,EAAkB,SAACC,GACvB,OAAGA,EAASC,MAAM,KAAKC,KAAK,IAAIC,SAAWH,EAASG,QAiCtDvB,qBAAU,WAER,IAAMC,EAA4C,OAAjCH,aAAaI,QAAQ,QAChCV,EAAOY,KAAKC,MAAMP,aAAaI,QAAQ,SAAWE,KAAKE,UAAUvB,IACvEiC,EAAYf,GACZV,EAAYC,EAAKgB,QAClB,IAYD,OAAGO,EAAiB,cAAC,IAAD,CAAU9C,GAAIL,IAGhC,qBAAKI,UAAU,iBAAf,SACE,uBAAMwD,SAnDI,SAACC,GAEb,GADAA,EAAEC,iBACEP,EAAgB5C,IAAa4C,EAAgBN,GAC/C,GAAItC,IAAagC,GAAsBM,IAAaN,EAAwB,CAE1E,IAAMf,EAAa,CACjBR,GAAI,EACJT,SAAUA,EACVU,KAAMtB,EAAMgE,OAEdT,EAAST,GAETX,aAAa8B,QAAQ,OAAQxB,KAAKE,UAAUd,IAC5CE,EAAShB,EAAiBc,IAC1BwB,GAAY,QAEZE,EAAS,CACPR,UAAU,EACVC,QNhDoB,mKMoDxBO,EAAS,CACPR,UAAU,EACVC,QNvDkC,8QMkFpC,UACE,qBAAK3C,UAAU,mBAAf,SAAkC,4BAAIH,MACtC,qBAAKG,UAAU,aAAf,SACE,uBACEY,KAAK,OACL4B,KAAK,WACLxB,GAAG,WACH6C,UP/FmB,GOgGnBC,UAAW,EACXC,UAAQ,EACRC,SAxBS,SAACP,GAClBlC,EAAYkC,EAAEQ,cAAcC,OAC5BhB,EAAST,IAuBD0B,YNjGkB,kGMoGtB,qBAAKnE,UAAU,aAAf,SACE,uBACEY,KAAK,WACL4B,KAAK,WACLxB,GAAG,WACH6C,UP1GmB,GO2GnBC,UAAW,EACXC,UAAQ,EACRC,SA/Ba,SAACP,GACtBX,EAAYW,EAAEQ,cAAcC,OAC5BhB,EAAST,IA8BD0B,YN5GkB,2CM+GtB,qBAAKnE,UAAU,iBAAf,SAAgC,wBAAQY,KAAK,SAAb,SAAuBf,MAGtDoD,EAAMP,SAAW,qBAAK1C,UAAU,iBAAf,SAAgC,4BAAIiD,EAAMN,YAAoB,SAOzEzC,MAAMC,KAAKyC,GC9HpBwB,G,YAAoB,WAIxB,OAHApC,qBAAU,WACVqC,OAAOC,SAAS,CAACC,IAAK,MACpB,IAEA,qBAAKvE,UAAU,mBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,SACf,qBAAKA,UAAU,gBAMRE,MAAMC,KAAKiE,GCQXI,MAlBf,WACE,OACE,cAAC,IAAD,UACE,qBAAKxE,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOyE,KAAM7E,EAAe8E,OAAK,EAACC,UAAW5E,IAC7C,cAAC,IAAD,CAAO0E,KAAM7E,EAAe8E,OAAK,EAACC,UAAWP,IAC7C,cAAC,IAAD,CAAOK,KAAM7E,EAAa8E,OAAK,EAACC,UAAWC,OAE7C,cAAC,EAAD,YCpBJC,EAAiB,CACnB7D,GAAI,EACJT,SAAU,QACVU,KAAMtB,EAAMuB,OCFH4D,EAAcC,0BAAgB,CACvCvD,KDIuB,WAGrB,IAFFwD,EAEC,uDAFaH,EACdI,EACC,uCACD,OAAOA,EAAOrE,MACV,KAAKlB,EAAQmB,YACT,OAAKoE,EAAOnE,QACLmE,EAAOnE,QADckE,EAEhC,QAAS,OAAOA,MELlBE,EAAQC,sBACZL,EACAM,8BAAoBC,0BAAgBC,OAGtCC,IAASC,OACP,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACE,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.d7600f4b.chunk.js","sourcesContent":["export type User = {\r\n    id: number\r\n    userName: string\r\n    role: ROLES\r\n    image?: string\r\n}\r\n\r\nexport type ActionType = {\r\n    type: ACTIONS\r\n    payload: User\r\n}\r\n\r\nexport enum ACTIONS {\r\n    CHANGE_USER = 'CHANGE_USER'\r\n}\r\n\r\nexport enum ROLES {\r\n    ADMIN = 'admin',\r\n    GUEST = 'guest'\r\n}","export const ROUTE = {\r\n    DEFAULT: '/',\r\n    GALLERY: '/gallery',\r\n    LOGIN: '/login'\r\n} as const\r\n\r\nexport const USERNAME_LENGTH = 30\r\nexport const PASSWORD_LENGTH = 30","export const PROJECT_NAME = 'Онлайн галлерея ретро техники'\r\nexport const MINI_GALLERY = 'Мини галлерея'\r\nexport const LOGIN = 'Вход'\r\nexport const LOGOUT = 'Выход'\r\nexport const TEXT_DESCRIPTION_FIRST = 'Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text Some text '\r\nexport const GO_TO_GALLERY = 'Перейти в галлерею'\r\n\r\n// information messages\r\nexport const ENTER_USERNAME = 'Имя пользователя'\r\nexport const ENTER_PASSWORD = 'Пароль'\r\n\r\n// Error messages\r\nexport const WRONG_USERNAME_OR_PASSWORD = 'Вы ввели некорректное имя пользователя или пароль'\r\nexport const USER_NOT_FOUND = 'Данный пользователь не найен'","import React from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { ROUTE } from \"../../constants/constants\"\r\nimport { GO_TO_GALLERY, MINI_GALLERY, TEXT_DESCRIPTION_FIRST } from \"../../constants/labels\"\r\n\r\nimport './ContentComponent.scss'\r\n\r\nconst ContentComponent: React.FC = () => {\r\n  return (\r\n    <div className='f-c'>\r\n      <div className='content'>\r\n        {/** Block with left image position */}\r\n        <div className='description-block left-img f-c'>\r\n          <div className='description-image'></div>\r\n          <div className='description-text'><p>{TEXT_DESCRIPTION_FIRST}</p></div>\r\n        </div>\r\n\r\n        {/** Block with right image position */}\r\n        <div className='description-block right-img f-c'>\r\n          <div className='description-text'><p>{TEXT_DESCRIPTION_FIRST}</p></div>\r\n          <div className='description-image'></div>\r\n        </div>\r\n\r\n        {/** Block with left image position */}\r\n        <div className='description-block left-img f-c'>\r\n          <div className='description-image'></div>\r\n          <div className='description-text'><p>{TEXT_DESCRIPTION_FIRST}</p></div>\r\n        </div>\r\n\r\n        <div className='mini-gallery'>\r\n          <div className='header f-c'><p>{MINI_GALLERY}</p></div>\r\n          <div className='gallery f-c'>\r\n            <div className='mini-item'></div>\r\n            <div className='mini-item'></div>\r\n            <div className='mini-item'></div>\r\n            <div className='mini-item'></div>\r\n          </div>\r\n          <div className='row f-c'><Link to={ROUTE.GALLERY}><button>{GO_TO_GALLERY}</button></Link></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(ContentComponent)","import React from \"react\"\r\n\r\nimport './Footer.scss'\r\n\r\nconst Footer: React.FC = () => {\r\n  return (\r\n    <footer></footer>\r\n  )\r\n}\r\n\r\nexport default React.memo(Footer)","import React from \"react\"\r\nimport { LOGOUT } from \"../../../constants/labels\"\r\n\r\nimport './UserLabelComponent.scss'\r\n\r\ninterface UserLabelProps {\r\n  userName: string\r\n  loginChange: () => void\r\n}\r\n\r\nconst UserLabelComponent: React.FC<UserLabelProps> = (props) => {\r\n  return (\r\n    <div className='user-label f-c'>\r\n      <div className='user-name'><p>{props.userName}</p></div>\r\n      <button onClick={props.loginChange} className='logout'><p>{LOGOUT}</p></button>\r\n      <div className='user-image'></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(UserLabelComponent)","import { ACTIONS, ActionType, User } from \"../../types\";\r\n\r\nexport const changeUserAction = (data: User): ActionType => {\r\n    return {\r\n        type: ACTIONS.CHANGE_USER,\r\n        payload: data\r\n    }\r\n}","import React, { useCallback, useEffect, useState } from 'react';\r\n\r\nimport './Header.scss'\r\nimport { LOGIN } from '../../constants/labels'\r\nimport UserLabelComponent from './UserLabelComponenmt/UserLabelComponent';\r\nimport { Link } from 'react-router-dom';\r\nimport { ROUTE } from '../../constants/constants';\r\nimport { ROLES, User } from '../../types';\r\nimport { RootStateOrAny, useDispatch, useSelector } from 'react-redux';\r\nimport { changeUserAction } from '../../store/actions';\r\n\r\nconst guest: User = {\r\n    id: 0,\r\n    userName: 'Guest',\r\n    role: ROLES.GUEST\r\n}\r\n\r\nconst Header: React.FC = () => {\r\n    const [isLogedIn, setIsLoggedIn] = useState<boolean>(false)\r\n    const [userName, setUserName] = useState('')\r\n    const user = useSelector((user: RootStateOrAny) => user.user)\r\n    const dispatch = useDispatch()\r\n\r\n    const logout = useCallback((): void => {\r\n        if(isLogedIn) {\r\n            localStorage.removeItem('user')\r\n            setIsLoggedIn(false)\r\n            dispatch(changeUserAction(guest))\r\n        }\r\n    }, [isLogedIn, dispatch])\r\n\r\n    useEffect(() => {\r\n        const hasUser = (localStorage.getItem('user') === null) ? false: true;\r\n        if(hasUser) {\r\n            const userStor = JSON.parse(localStorage.getItem('user') || JSON.stringify(guest))\r\n            const user: User = {\r\n                id: userStor.id,\r\n                userName: userStor.userName,\r\n                role: userStor.role\r\n            }\r\n            dispatch(changeUserAction(user))\r\n        }\r\n        setIsLoggedIn(hasUser)\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        const hasUser = (localStorage.getItem('user') === null) ? false: true;\r\n        setIsLoggedIn(hasUser)\r\n        setUserName(user.userName)\r\n    }, [user])\r\n\r\n    return (\r\n        <header className='f-c'>\r\n            <div className='header-content f-b'>\r\n                <Link to={ROUTE.DEFAULT}><h1>Museum logo</h1></Link>\r\n                <div className='auth-wrap'>\r\n                    {isLogedIn ?\r\n                        (<UserLabelComponent loginChange={logout} userName={userName} />)\r\n                        : (<button> <Link to={ROUTE.LOGIN}><p>{LOGIN}</p></Link></button>)\r\n                    }\r\n                </div> \r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default React.memo(Header)","import React, { useEffect, useState } from \"react\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { Redirect } from \"react-router\"\r\nimport { USERNAME_LENGTH, PASSWORD_LENGTH, ROUTE } from \"../../../constants/constants\"\r\nimport { ENTER_PASSWORD, ENTER_USERNAME, LOGIN, USER_NOT_FOUND, WRONG_USERNAME_OR_PASSWORD } from \"../../../constants/labels\"\r\nimport { changeUserAction } from \"../../../store/actions\"\r\nimport { ROLES, User } from \"../../../types\"\r\n\r\nimport './LoginComponent.scss'\r\n\r\nconst testAdminUser = {\r\n  name: 'Admin',\r\n  password: 'Admin'\r\n}\r\n\r\ninterface LoginError {\r\n  hasError: boolean\r\n  message: string\r\n}\r\n\r\nconst guest = {\r\n  id: 0,\r\n  name: 'Guest',\r\n  role: ROLES.GUEST\r\n}\r\n\r\nconst noError = {\r\n  hasError: false,\r\n  message: ''\r\n}\r\n\r\nconst LoginComponent: React.FC = () => {\r\n  const [userName, setUserName] = useState<string>('guest')\r\n  const [password, setPassword] = useState<string>('')\r\n  const [loggedIn, setLoggedIn] = useState<boolean>(false)\r\n  const [error, setError] = useState<LoginError>(noError)\r\n  const dispatch = useDispatch()\r\n\r\n  const isCorrectString = (inputStr: string): boolean => {\r\n    if(inputStr.split(' ').join('').length !== inputStr.length) return false\r\n    return true\r\n  }\r\n\r\n  const login = (e: React.FormEvent): void => {\r\n    e.preventDefault()\r\n    if (isCorrectString(userName) && isCorrectString(password)) {\r\n      if (userName === testAdminUser.name && password === testAdminUser.password) {\r\n        // Create user entity\r\n        const user: User = {\r\n          id: 1,\r\n          userName: userName,\r\n          role: ROLES.ADMIN\r\n        }\r\n        setError(noError)\r\n        // Put user to local and redux storage\r\n        localStorage.setItem('user', JSON.stringify(user))\r\n        dispatch(changeUserAction(user))\r\n        setLoggedIn(true)\r\n      } else {\r\n        setError({\r\n          hasError: true,\r\n          message: USER_NOT_FOUND\r\n        })\r\n      }\r\n    } else {\r\n      setError({\r\n        hasError: true,\r\n        message: WRONG_USERNAME_OR_PASSWORD\r\n      })\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Set login status after page reload\r\n    const hasUser = (localStorage.getItem('user') === null) ? false: true;\r\n    const user = JSON.parse(localStorage.getItem('user') || JSON.stringify(guest))\r\n    setLoggedIn(hasUser)\r\n    setUserName(user.name)\r\n}, [])\r\n\r\n  const changeName = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    setUserName(e.currentTarget.value)\r\n    setError(noError)\r\n  }\r\n\r\n  const changePassword = (e: React.FormEvent<HTMLInputElement>): void => {\r\n    setPassword(e.currentTarget.value)\r\n    setError(noError)\r\n  }\r\n\r\n  if(loggedIn) return <Redirect to={ROUTE.DEFAULT} />\r\n\r\n  return (\r\n    <div className='login-wrap f-c'>\r\n      <form onSubmit={login}>\r\n        <div className='login-header f-c'><p>{LOGIN}</p></div>\r\n        <div className='input-wrap'>\r\n          <input\r\n            type=\"text\"\r\n            name=\"userName\"\r\n            id=\"userName\"\r\n            maxLength={USERNAME_LENGTH}\r\n            minLength={3}\r\n            required\r\n            onChange={changeName}\r\n            placeholder={ENTER_USERNAME}\r\n          />\r\n        </div>\r\n        <div className='input-wrap'>\r\n          <input\r\n            type=\"password\"\r\n            name=\"password\"\r\n            id=\"password\"\r\n            maxLength={PASSWORD_LENGTH}\r\n            minLength={3}\r\n            required\r\n            onChange={changePassword}\r\n            placeholder={ENTER_PASSWORD}\r\n          />\r\n        </div>\r\n        <div className='input-wrap f-c'><button type=\"submit\">{LOGIN}</button></div>\r\n        \r\n        {/** Handle data error */}\r\n        {error.hasError ? <div className='error-text f-c'><p>{error.message}</p></div>: ''}\r\n      </form>\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(LoginComponent)","import React, { useEffect } from \"react\"\r\n\r\nimport './Gallery.scss'\r\n\r\nconst Gallery: React.FC = () => {\r\n  useEffect(() => {\r\n\t\twindow.scrollTo({top: 0});\r\n\t}, []);\r\n  return (\r\n    <div className='gallery-wrap f-c'>\r\n      <div className='gallery f-c'>\r\n        <div className='item'></div>\r\n        <div className='item'></div>\r\n        <div className='item'></div>\r\n        <div className='item'></div>\r\n        <div className='item'></div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Gallery)","import ContentComponent from './components/ContentComponents/ContentComponent';\r\nimport Footer from './components/FooterComponent/Footer';\r\nimport Header from './components/HeaderComponents/Header';\r\nimport LoginCmponent from './components/HeaderComponents/LoginComponent/LoginCmponent';\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { ROUTE } from './constants/constants';\r\n\r\nimport './App.scss';\r\nimport Gallery from './components/ContentComponents/Gallery/Gallery';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"f-c\">\r\n        <div className='wrapper'>\r\n          <Header />\r\n          <Switch>\r\n            <Route path={ROUTE.DEFAULT} exact component={ContentComponent}/>\r\n            <Route path={ROUTE.GALLERY} exact component={Gallery} />\r\n            <Route path={ROUTE.LOGIN} exact component={LoginCmponent}/>\r\n          </Switch>\r\n          <Footer />\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ACTIONS, ActionType, ROLES, User } from \"../../types\";\r\n\r\nconst initUser: User = {\r\n    id: 0,\r\n    userName: 'guest',\r\n    role: ROLES.GUEST\r\n}\r\n\r\nexport const userReducer = (\r\n    state: User = initUser,\r\n    action: ActionType\r\n) => {\r\n    switch(action.type) {\r\n        case ACTIONS.CHANGE_USER:\r\n            if (!action.payload) return state\r\n            return action.payload\r\n        default: return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport { userReducer } from \"./userReducer\";\r\n\r\nexport const allReducers = combineReducers({\r\n    user: userReducer\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { applyMiddleware, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport App from './App';\r\nimport { allReducers } from './store/reducers';\r\n\r\nconst store = createStore(\r\n  allReducers,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}